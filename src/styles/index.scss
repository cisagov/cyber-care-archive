@use 'sass:list';

/*
  Hide compile warnings and notifications, make want to set to true in dev
*/
$theme-show-compile-warnings: false;
$theme-show-notifications: false;

/*
  These are necessary for the image and font urls referenced in the source
  files to resolve correctly.
*/
$theme-image-path: '../../node_modules/uswds/src/img';
$theme-font-path: '../../node_modules/uswds/src/fonts';

/*
  The url for the hero image in the source file is not currently prefixed by
  the $theme-image-path above.
*/

$theme-hero-image: '#{$theme-image-path}/hero.png';

// Your custom changes to variables go here
// Uncomment to see this working
// $theme-color-primary-darker: 'black';

@import '../../node_modules/uswds/dist/scss/uswds.scss';

// Your custom SASS/CSS goes here
@media screen and (min-width: 640px) {
  .tablet\:width-1\/3 {
    width: 33%;
  }
  .tablet\:float-left {
    float: left;
  }
}

@media screen and (min-width: 640px) {
  .paginate-link {
    display: initial;
  }
  .paginate-button {
    display: none;
  }
}

@media screen and (max-width: 640px) {
  .paginate-link {
    display: none;
  }
  .paginate-button {
    display: block;
  }
}

$one: rgb(32, 55, 101);
$two: rgb(94, 58, 102);
$three: rgb(153, 103, 52);
$four: rgb(149, 43, 61);
$five: rgb(94, 128, 68);

.usa-step-indicator__header {
  display:none;
}

.usa-step-indicator__segments {
  justify-content: center;
  margin-left:150px;
}

@media (min-width: 40em) {
  .usa-hero__callout {
    max-width: 40rem;
  }
}

#survey-start {
  // @extend .usa-form;
  // max-width: 30rem;
  label {
    @extend .usa-label;
  }
  input[type=text],input[type=number],input[type=email] {
    @extend .usa-input;
  }
  fieldset {
    @extend .usa-fieldset;
  }
  input[type=button], input[type=submit], button {
    @extend .usa-button;
  }
  select {
    @extend .usa-select;
  }
  .checkbox {
    @extend .usa-checkbox;
  }
  input[type=checkbox] {
    @extend .usa-checkbox__input;
  }
  input[type=checkbox] + span {
    @extend .usa-checkbox__label;
  }
  .cpg-form {
    @for $i from 1 through 5 {
      $color: list.nth([$one, $two, $three, $four, $five], $i);
      .cpg.cpg-#{$i} {
        > fieldset > legend {

        }
        legend {
          background: $color;
          display: block;
          width: 100%;
          color: white;
          font-size: 1rem;
          padding: 8px;
          font-weight: bold;
          // margin-bottom: 5px;
          // @extend .usa-accordion;
        }
        label {
          margin-top: 0;
        }
        .field-radio-group {
          display: flex;
          padding-top: 10px;
          .radio-inline {
            flex: 1;
            padding-right: 10px; 
            // @extend .usa-radio;
            input {
              // @extend .usa-radio__input;
            }
            span {
              margin-left: 5px;
              // @extend .usa-radio__label;
            }
          }
        }
        .field-notes input {
          margin-top: 0;
          border-top: none;
          border-left: none;
        }
        .field-object fieldset {
          display: flex;
          margin-bottom: 20px;
          > div.field-status {
            flex: 3;
            border-bottom: 1px solid black;
            border-left: 1px solid black;
          }
          > div.field-notes {
            flex: 1;
            min-width: 100px;
          }
        }
      }
    }
  }
}

.usa-step-indicator__header {
  display: none;
}